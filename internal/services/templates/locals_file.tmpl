# ▼▼▼ Automatically generated by Terra-Crust, PLEASE DON'T EDIT MANUALLY, Please edit {main template/ sub-module variables} if changes are needed :slight_smile: ▼▼▼
locals{ {{range $moduleName,$moduleData := .Module}}
{{$moduleName}} = { {{template "simple_local_var" (SimpleWrap $moduleName $moduleData.SimpleLocals)}}
{{template "typeMapLocalBlock" (ModuleDataWrapper $moduleName $moduleData)}}
}{{end}}
}

{{define "simple_local_var"}} {{$moduleName := .VariableName}} {{range $localName,$localValue := .ModuleData}}
{{$localName}} = coalesce(var.{{$moduleName}}.{{$localName}},{{$localValue}}) {{end}}{{end}}

{{define "typeMapLocalBlock"}} {{$moduleData := .ModuleData}} {{$moduleName := .ModuleName}}{{range $mapKey,$mapValue :=  $moduleData.MapLocals}}
{{$tempLen := len $mapValue }}{{if eq $tempLen 1}} {{$mapKey}} = var.{{$moduleName}}.{{$mapKey}} != null ? var.{{$moduleName}}.{{$mapKey}}:{} {{else}} 
{{$mapKey}} = var.{{$moduleName}}.{{$mapKey}} != null ? merge(var.{{$moduleName}}.{{$mapKey}},
tomap({ {{range $propertyName, $propertyValue := $mapValue}}
{{$propertyName}} = contains(keys(var.{{$moduleName}}.{{$mapKey}}),{{$propertyName}}) != false ? var.{{$moduleName}}.{{$mapKey}}[{{$propertyName}}] : {{$propertyValue}}{{end}}}
)):{
{{range $name, $value := $mapValue}} {{$name}} = {{$value}}
{{end}}} {{end}}{{end}} 
{{end}}
